{% if item.type == 'neutrinet' %}
filter {{ item.type | replace('-', '_') }}_{{ item.slug }}_import {

   bgp_large_community.add((my_asn, 0, 40));
   bgp_local_pref = 190;

   accept;
}

{% endif %}

{% if item.neighbor_ipv6 is defined and (item.neighbor_ipv6 | length > 0) %}
protocol bgp {{ item.type | replace('-', '_') }}_{{ item.slug }}_v6 {
   neighbor {{ item.neighbor_ipv6 }} as {{ item.asn }};
   local as my_asn;
   description "[{{ item.type }}] {{ item.name }} ({{ item.asn }})";
   vrf "routing";

{% if 'neighbor_ipv4' not in item %}
   ipv4 {
      #import filter {{ item.type | replace('-', '_') }}_{{ item.slug }}_import;
      import none;
      export where proto = "default_gw_v4";

      next hop self;
   };
{% endif %}
   ipv6 {
      #import filter {{ item.type | replace('-', '_') }}_{{ item.slug }}_import;
      import none;
      export where proto = "default_gw_v6";

      next hop self;
   };
}
{% endif %}

{% if item.neighbor_ipv4 is defined and (item.neighbor_ipv4 | length > 0) %}
protocol bgp {{ item.type | replace('-', '_') }}_{{ item.slug }}_v4 {
   neighbor {{ item.neighbor_ipv4 }} as {{ item.asn }};
   local as my_asn;
   description "[{{ item.type }}] {{ item.name }} ({{ item.asn }})";
   vrf "routing";

   ipv4 {
      #import filter {{ item.type | replace('-', '_') }}_{{ item.slug }}_import;
      import none;
      export where proto = "default_gw_v4";

      next hop self;
   };

}
{% endif %}