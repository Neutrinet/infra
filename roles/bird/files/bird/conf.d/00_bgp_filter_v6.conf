define BOGON_PREFIXES_V6 = [
  ::/8+,                  # RFC 4291 IPv4-compatible, loopback, et al
  0100::/64+,             # RFC 6666 Discard-Only
  2001:2::/48+,           # RFC 5180 BMWG
  2001:10::/28+,          # RFC 4843 ORCHID
  2001:db8::/32+,         # RFC 3849 documentation
  2002::/16+,             # RFC 7526 6to4 anycast relay
  3ffe::/16+,             # RFC 3701 old 6bone
  fc00::/7+,              # RFC 4193 unique local unicast
  fe80::/10+,             # RFC 4291 link local unicast
  fec0::/10+,             # RFC 3879 old site local unicast
  ff00::/8+               # RFC 4291 multicast
];


function reject_v6_bogon_prefixes(string direction; string locality)
prefix set bogon_prefixes;
{
  bogon_prefixes = BOGON_PREFIXES_V6;

  if (net ~ bogon_prefixes) then {
    print "[", direction, "][", locality, "] Reject: Bogon prefix: ", net, " ", bgp_path;
    return true;
  }
    return false;
}

function reject_v6_small_prefixes(string direction; string locality)
{
      if (net.len > 48) then {
          print "[", direction, "][", locality, "] Reject: Too small prefix: ", net, " ", bgp_path;
          return true;
      }
    return false;
}

function reject_v6_default_route(string direction; string locality)
{
  if (net ~ [::/0]) then {
    print "[", direction, "][", locality, "] Reject: default route: ", net, " ", bgp_path;
    return true;
  }
  return false;
}


function reject_v6_invalid_rpki(string direction; string locality)
{
  if roa_check(roa_v6, net, bgp_path.last_nonaggregated) = ROA_INVALID then {
    print "[", direction, "][", locality, "] Reject: Invalid RPKI: ", net, " ", bgp_path;
    return true;
  }
  return false;
}