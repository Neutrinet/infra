---

- name: Installation de haproxy
  ansible.builtin.package:
    name: haproxy
    state: present
    default_release: "{{ ansible_distribution_release }}-backports"

- name: Création du répertoire ssl
  ansible.builtin.file:
    path: /etc/haproxy/ssl
    mode: "u=rwx,g=rx,o="
    owner: haproxy
    group: haproxy
    state: directory

- name: Copie du certificat par défaut
  ansible.builtin.copy:
    src: default.pem
    dest: /etc/haproxy/ssl/default.pem
    mode: "u=rw,g=r,o="
    owner: haproxy
    group: haproxy
  notify: reload haproxy

- name: Copie des pages d'erreur personnaliser
  ansible.builtin.copy:
    src: errors/{{ item }}.http
    dest: /etc/haproxy/errors/{{ item }}.http
    mode: "u=rw,g=r,o="
    owner: haproxy
    group: haproxy
  notify: reload haproxy
  with_items:
    - 400
    - 403
    - 408
    - 500
    - 502
    - 503
    - 504

- name: Config de haproxy
  ansible.builtin.template:
    dest: /etc/haproxy/haproxy.cfg
    src: haproxy.conf.j2
    owner: root
    group: root
    mode: "u=rw,g=r,o="
    validate: "haproxy -f %s -c -q"
  notify: reload haproxy

- name: Placement du hook pour letsencrypt
  ansible.builtin.copy:
    src: haproxy.py
    dest: /etc/letsencrypt/haproxy.py
    mode: "ugo=rx"
    owner: root
    group: root

- name: Activation de haproxy au démarrage
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: true

- name: Trigger haproxy handler
  # We force haproxy to reload its config to ensure our config has been applied.
  # This forced reload is required on debian systems,
  # because haproxy appears to be already started and enabled by apt,
  # and later in this role, telegraf expects our haproxy to be correctly configured.
  ansible.builtin.meta: flush_handlers
