{{ ansible_managed | comment }}

# Go-NEB Configuration File
#
# This file provides an alternative way to configure Go-NEB which does not involve HTTP APIs.
#
# This file can be supplied to go-neb by the environment variable `CONFIG_FILE=config.yaml`.
# It will force Go-NEB to operate in "config" mode. This means:
#   - Go-NEB will ONLY use the data contained inside this file.
#   - All of Go-NEB's /admin HTTP listeners will be disabled. You will be unable to add new services at runtime.
#   - The environment variable `DATABASE_URL` will be ignored and an in-memory database will be used instead.

clients:
  - UserID: "@{{ alertmanager_matrix_username }}:{{ alertmanager_matrix_host }}"
    AccessToken: "{{ alertmanager_matrix_token }}"
    DeviceID: "{{ alertmanager_matrix_device }}"
    HomeserverURL: "https://{{ alertmanager_matrix_host }}"
    Sync: true
    AutoJoinRooms: true
    DisplayName: "Neutrinet Alert"
    AcceptVerificationFromUsers: [":{{ alertmanager_matrix_host }}"]

services:
  - ID: "echo"
    Type: "echo"
    UserID: "@{{ alertmanager_matrix_username }}:{{ alertmanager_matrix_host }}"
    Config: {}

  - ID: "{{ alertmanager_matrix_service }}"
    Type: "alertmanager"
    UserID: "@{{ alertmanager_matrix_username }}:{{ alertmanager_matrix_host }}"
    Config:
      # This is for information purposes only. It should point to Go-NEB path as follows:
      # `/services/hooks/<base64 encoded service ID>`
      # Where in this case "service ID" is "alertmanager_service"
      # Make sure your BASE_URL can be accessed by the Alertmanager instance!
      webhook_url: {{ alertmanager_matrix_webhook_url }}
      # Each room will get the notification with the alert rendered with the given template
      rooms:
        "{{ alertmanager_matrix_room }}":
{% raw %}
          text_template: >-
            {{ range .Alerts -}}
              {{ if eq .Status "firing" -}}
                {{ $severity := index .Labels "severity" }}
                {{- if eq $severity "critical" -}}
                  [üî• CRITICAL]
                {{- else if eq $severity "warning" -}}
                  [‚ö†Ô∏è WARNING]
                {{- else -}}
                  [üîîÔ∏è {{ $severity }}]
                {{- end -}}
              {{ else -}}
                [ü•¶ RESOLVED]
              {{- end }} {{ index .Labels "alertname" }}: {{ index .Annotations "description" }}
            {{ end }}
          html_template: >-
            {{ range .Alerts -}}
              {{ if eq .Status "firing" -}}
                {{ $severity := index .Labels "severity" }}
                {{- if eq $severity "critical" -}}
                  <font color='#dc3545'><b>[üî• CRITICAL]</b></font>
                {{- else if eq $severity "warning" -}}
                  <font color='#ffc107'><b>[‚ö†Ô∏è WARNING]</b></font>
                {{- else -}}
                  <b>[üîîÔ∏è {{ $severity }}]</b>
                {{- end -}}
              {{ else -}}
                <font color='#33cc33'><b>[ü•¶ RESOLVED]</b></font>
              {{- end }} <a href="{{ .GeneratorURL }}">{{ index .Labels "alertname" }}</a> ({{ index .Labels "job" }})<br/>
              {{- index .Annotations "description" }}<br/>
            {{ end }}
{% endraw %}
          msg_type: "m.text"  # Must be either `m.text` or `m.notice`
