{{ ansible_managed | comment }}

# See https://prometheus.io/docs/alerting/configuration/ for documentation.

# The directory from which notification templates are read.
templates:
  - /etc/alertmanager/templates/*.tmpl

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['...']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 0s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 1m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 3h

  # A default receiver
  receiver: default-receiver

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.

  # The child route trees.
  routes:
    - matchers:
        - frequency = monthly
      repeat_interval: 30d
      routes:
        - receiver: default-receiver
    - matchers:
        - frequency = daily
      repeat_interval: 1d
      routes:
        - receiver: default-receiver
    - routes:
        - receiver: default-receiver

receivers:
  - name: default-receiver
    webhook_configs:
      # Send alerts to matrix-alertbot, which will forward them to a Matrix room
      - url: http://localhost:4060/alerts/{{ alertmanager_matrix_alertbot_room }}
        send_resolved: true

inhibit_rules:
  # Combine Certificate alerts from different probes
  # to single alert from main probe.
  - target_matchers:
      - instance != {{ inventory_hostname }}
    source_matchers:
      - category = probe.cert
      - instance = {{ inventory_hostname }}
    equal: ['alertname', 'category', 'url']

  # Combine HTTP alerts from different probes
  # to single alert from main probe.
  - target_matchers:
      - instance != {{ inventory_hostname }}
    source_matchers:
      - category = probe.http
      - instance = {{ inventory_hostname }}
    equal: ['alertname', 'category', 'url']

  # Combine ICMP alerts from different probes
  # to single alert from main probe.
  - target_matchers:
      - instance != {{ inventory_hostname }}
    source_matchers:
      - category = probe.icmp
      - instance = {{ inventory_hostname }}
    equal: ['alertname', 'category', 'url']

  # Combine VPN alerts from different probes
  # to single alert from main probe.
  - target_matchers:
      - instance != {{ inventory_hostname }}
    source_matchers:
      - category = probe.vpn
      - instance = {{ inventory_hostname }}
    equal: ['alertname', 'category', 'address', 'port', 'protocol']

  # Combine VPN alerts for different ports and protocols
  # to single alert for TCP protocol and 1195 port.
  - target_matchers:
      - protocol != tcp
      - port != 1195
    source_matchers:
      - category = probe.vpn
      - protocol = tcp
      - port = 1195
    equal: ['alertname', 'category', 'address']

  # Hide Caddy alerts about HTTP errors when reverse proxy is down
  - target_matchers:
      - category =~ caddy.http_.xx
    source_matchers:
      - category = caddy.health
    equal: ['instance']

  # Hide HAProxy alerts about HTTP errors when backend is down
  - target_matchers:
      - category =~ haproxy.http_.xx
    source_matchers:
      - category = haproxy.health
    equal: ['instance', 'proxy']

  # Hide Probe HTTP alerts when Caddy has HTTP 5xx errors
  - target_matchers:
      - category = probe.http
    source_matchers:
      - category = caddy.http_5xx
    equal: ['host']

  # Hide Backup errors when {{ inventory_hostname }} is down
  - target_matchers:
      - category = base.backup
      - instance != {{ inventory_hostname }}
    source_matchers:
      - category = base.health
      - instance = {{ inventory_hostname }}
