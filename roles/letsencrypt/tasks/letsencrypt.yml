---

- name: Installation des dépendances python
  ansible.builtin.package:
    name:
      - python3-dev
      - python3-virtualenv
      - virtualenv
    state: present

- name: Création des dossiers Let's Encrypt
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: "u=rwx,go=rx"
    state: directory
  with_items:
    - /etc/letsencrypt
    - /etc/letsencrypt/ovh
    - /etc/letsencrypt/gandi
    - /opt/letsencrypt

- name: Installation de pip et certbot  # noqa package-latest
  ansible.builtin.pip:
    name:
      - pip
      - certbot
      - certbot-dns-ovh
      - certbot-plugin-gandi
    virtualenv: /opt/letsencrypt
    virtualenv_python: python3
    state: latest
    chdir: /opt/letsencrypt

- name: Création d'un lien symbolique pour le binaire certbot
  ansible.builtin.file:
    src: /opt/letsencrypt/bin/certbot
    dest: /usr/local/bin/certbot
    state: link

- name: Création d'un cron job pour renouveler les certificats
  ansible.builtin.cron:
    name: "letsencrypt-update"
    cron_file: letsencrypt-update
    special_time: daily
    user: "root"
    job: "/opt/letsencrypt/bin/certbot renew"

- name: Enregistrement du compte Let's Encrypt
  ansible.builtin.command:
    cmd: >
      /opt/letsencrypt/bin/certbot register
      --non-interactive
      {% if letsencrypt_staging %}--staging {% endif %}
      --email {{ letsencrypt_mail_notification }}
      --no-eff-email
      --agree-tos
    creates: /etc/letsencrypt/accounts

- name: Config d'OVH pour Let's Encrypt
  ansible.builtin.template:
    dest: /etc/letsencrypt/ovh/ovh.ini
    src: ovh.ini.j2
    owner: root
    group: root
    mode: "u=rw,go="
  when: letsencrypt_domains_ovh | length > 0

- name: Config de Gandi pour Let's Encrypt
  ansible.builtin.template:
    dest: /etc/letsencrypt/gandi/gandi.ini
    src: gandi.ini.j2
    owner: root
    group: root
    mode: "u=rw,go="
  when: letsencrypt_domains_gandi | length > 0

- name: Placement du hook pour HAproxy
  ansible.builtin.copy:
    src: haproxy.py
    dest: /etc/letsencrypt/haproxy.py
    mode: "ugo=rx"
    owner: root
    group: root

- name: Création des certificats rsa par challenge ovh
  ansible.builtin.include_tasks: letsencrypt-ovh-rsa.yml
  loop: "{{ letsencrypt_domains_ovh }}"
  loop_control:
    loop_var: domain

- name: Création des certificats ecdsa par challenge ovh
  ansible.builtin.include_tasks: letsencrypt-ovh-ecdsa.yml
  loop: "{{ letsencrypt_domains_ovh }}"
  loop_control:
    loop_var: domain


- name: Création des certificats rsa par challenge gandi
  ansible.builtin.include_tasks: letsencrypt-gandi-rsa.yml
  loop: "{{ letsencrypt_domains_gandi }}"
  loop_control:
    loop_var: domain

- name: Création des certificats ecdsa par challenge gandi
  ansible.builtin.include_tasks: letsencrypt-gandi-ecdsa.yml
  loop: "{{ letsencrypt_domains_gandi }}"
  loop_control:
    loop_var: domain
