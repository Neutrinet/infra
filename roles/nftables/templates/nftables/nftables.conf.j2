#!/usr/sbin/nft -f

flush ruleset

table inet my_table {
	chain my_input {
		type filter hook input priority 0; policy drop;

		iif lo accept comment "Accept any localhost traffic"
		iif routing accept comment "Accept any localhost traffic"
		ct state invalid drop comment "Drop invalid connections"
		ct state established,related accept comment "Accept traffic originated from us"

		# Limit ping requests.
		ip protocol icmp icmp type echo-request limit rate over 1/second burst 5 packets drop
		ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate over 1/second burst 5 packets drop

		# Drop all fragments.
		ip frag-off & 0x1fff != 0 counter drop

		# Force SYN checks.
		tcp flags & (fin|syn|rst|ack) != syn ct state new counter drop

		# Drop XMAS packets.
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|rst|psh|ack|urg counter drop

		# Drop NULL packets.
		tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop

		# Allow certain inbound ICMP types (ping, traceroute).
		# With these allowed you are a good network citizen.
		ip protocol icmp icmp type { destination-unreachable, echo-reply, echo-request, source-quench, time-exceeded } accept
		# Without the nd-* ones ipv6 will not work.
		ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, echo-reply, echo-request, nd-neighbor-solicit,  nd-router-advert, nd-neighbor-advert, packet-too-big, parameter-problem, time-exceeded } accept
		# Allow IPv6 multicast listener discovery on link-local
		ip6 nexthdr icmpv6 icmpv6 type {mld-listener-query, mld-listener-report, mld-listener-reduction, mld2-listener-report } ip6 saddr fe80::/10 accept

		udp dport 33434-33523 accept comment "Accept Tracroute"

		udp dport snmp ip saddr 10.0.11.109 accept comment "Accept SNMP on port snmp"
		udp dport snmp ip6 saddr 2001:913:1000:11::109 accept comment "Accept SNMP on port snmp"

		tcp dport ssh accept comment "Accept SSH on port 22"
		tcp dport bgp iifname "ens19" accept comment "Accept BGP on port 179 Routing"

		tcp dport bgp ip6 daddr {2001:7f8:26::a520:4059:1} accept comment "Accept BGP on port 179"
		tcp dport bgp ip daddr {194.53.172.101} accept comment "Accept BGP on port 179"
		tcp sport bgp ip6 daddr {2001:7f8:26::a520:4059:1} accept comment "Accept BGP on port 179"
		tcp sport bgp ip daddr {194.53.172.101} accept comment "Accept BGP on port 179"

		log prefix "[nftables] Input Denied: " counter drop
	}

	chain my_forward {
		type filter hook forward priority 0; policy accept; notrack;

		iifname "routing" oifname "ens19" accept comment "Accept Internet to Neutrinet"
		iifname "routing" oifname "ens20" accept comment "Accept Neutrinet to Internet"

		log prefix "[nftables] Forward Denied: " counter drop
	}

	chain my_output {
		type filter hook output priority 0; policy accept;
	}

}

table ip stateless {
	chain prerouting {
		type filter hook prerouting priority raw - 10; policy accept;
		ip daddr != { 10.0.10.200, 169.254.0.201, 80.67.181.0, 194.53.172.101, 127.0.0.0/8 } notrack
	}
}
table ip6 stateless {
	chain prerouting {
		type filter hook prerouting priority raw - 10; policy accept;
		ip6 daddr != { 2001:913:1000:10::201, fe80:cafe::201, 2001:913:1000:100::200, 2001:7f8:26::a520:4059:1, ::1 } notrack
	}
}

table ip sshguard {
	set attackers {
		type ipv4_addr
		flags interval
	}

	chain blacklist {
		type filter hook input priority filter - 10; policy accept;
		ip saddr @attackers drop
	}
}
table ip6 sshguard {
	set attackers {
		type ipv6_addr
		flags interval
	}

	chain blacklist {
		type filter hook input priority filter - 10; policy accept;
		ip6 saddr @attackers drop
	}
}
