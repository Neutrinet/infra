---
# Install the accounting Rails app

- name: Install a required packages
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - git
    - libpq-dev

- name: Install a required packages (from backports)
  apt:
    name: "{{ packages }}"
    state: present
    default_release: stretch-backports
  vars:
    packages:
    - nodejs
    - yarn

- name: Download Rails app
  git:
    repo: "{{ repo_url }}"
    dest: "{{ rails_root }}"
    force: yes

- name: Update permission
  file:
    path: "{{ rails_root }}"
    recurse: true
    owner: "{{ system_user }}"
    group: "{{ system_user }}"

- name: Install bundle
  command: bash -lc "bundle install"
  args:
    chdir: "{{ rails_root }}"

- name: Create database
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: 'UTF-8'

- name: Create database user
  become_user: postgres
  postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    password: "{{ db_password }}"

- name: Copy .profile file
  template:
    src: profile.j2
    dest: "{{ home }}/.profile"
    owner: "{{ system_user }}"
    mode: "u+rw,g+r,o+r"

- name: Run migrations
  command: bash -lc "source {{ home }}/.profile && bundle exec rails db:migrate"
  args:
    chdir: "{{ rails_root }}"

- name: Precompile assets
  command: bash -lc "source {{ home }}/.profile && bundle exec rails  assets:precompile"
  args:
    chdir: "{{ rails_root }}"

- name: Copy service config file
  template:
    src: accounting.service.j2
    dest: /etc/systemd/system/accounting.service
    owner: root
    group: root
    mode: 0664

- name: Enable service
  systemd:
    state: started
    enabled: yes
    daemon_reload: yes
    name: accounting

- name: Restart service
  systemd:
    state: restarted
    daemon_reload: yes
    name: accounting

- name: Update permission
  file:
    path: "{{ rails_root }}"
    recurse: true
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
 
