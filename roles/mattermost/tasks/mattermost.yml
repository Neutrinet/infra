- name: Installation de rsync
  package:
    name: rsync
    state: present

- name: Téléchargement de la clé publique GPG de Mattermost
  uri:
    url: https://keybase.io/mattermost/pgp_keys.asc
    return_content: true
  register: _mattermost_gpg_public_key_downloaded

- name: Importation de la clé publique GPG
  command:
    cmd: gpg --import -
    stdin: "{{ _mattermost_gpg_public_key_downloaded.content }}"
  changed_when: "'imported: 1' in _mattermost_gpg_public_key_imported.stdout"
  register: _mattermost_gpg_public_key_imported

- name: Téléchargement de l'archive Mattermost v{{ mattermost_version }}
  get_url:
    url: https://releases.mattermost.com/{{ mattermost_version }}/mattermost-{{ mattermost_version }}-linux-amd64.tar.gz
    dest: /usr/local/src/mattermost-{{ mattermost_version }}.tar.gz
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Téléchargement de la signature GPG pour l'archive
  get_url:
    url: https://releases.mattermost.com/{{ mattermost_version }}/mattermost-{{ mattermost_version }}-linux-amd64.tar.gz.sig
    dest: /usr/local/src/mattermost-{{ mattermost_version }}.tar.gz.sig
    owner: root
    group: root
    mode: "u=rw,go=r"

- name: Vérification de la signature GPG
  command:
    cmd: gpg --verify mattermost-{{ mattermost_version }}.tar.gz.sig mattermost-{{ mattermost_version }}.tar.gz
    chdir: /usr/local/src
  changed_when: false

- name: Création du dossier de Mattermost
  file:
    path: /var/www/{{ mattermost_owner }}/mattermost-{{ mattermost_version }}
    owner: "{{ mattermost_owner }}"
    group: "{{ mattermost_owner }}"
    mode: "u=rwx,g=rx,o="
    state: directory

- name: Décompression de l'archive
  unarchive:
    src: /usr/local/src/mattermost-{{ mattermost_version }}.tar.gz
    dest: /var/www/{{ mattermost_owner }}/mattermost-{{ mattermost_version }}
    creates: /var/www/{{ mattermost_owner }}/mattermost-{{ mattermost_version }}/README.md
    remote_src: true
    extra_opts:
      - --strip-components=1
    owner: "{{ mattermost_owner }}"
    group: "{{ mattermost_owner }}"

- name: Vérification si Mattermost est déjà installé
  stat:
    path: /var/www/{{ mattermost_owner }}/dist
    follow: true
  register: _mattermost_current_install_path

- name: Récupération de la version installée de Mattermost
  command:
    cmd: bin/mattermost version --skip-server-start
    chdir: /var/www/{{ mattermost_owner }}/dist
  changed_when: false
  register: _mattermost_current_version
  when:
    - _mattermost_current_install_path.stat.exists
    - _mattermost_current_install_path.stat.isdir

- name: Vérification si Mattermost doit être mis à jour
  set_fact:
    mattermost_update: |-
      {{ _mattermost_current_version is not skipped
        and mattermost_version not in _mattermost_current_version.stdout }}

- name: Copie des dossiers de l'installation existante
  synchronize:
    src: /var/www/{{ mattermost_owner }}/dist/{{ directory }}/
    dest: /var/www/{{ mattermost_owner }}/mattermost-{{ mattermost_version }}/{{ directory }}/
    compress: false
    delete: true
    recursive: true
  delegate_to: "{{ inventory_hostname }}"
  loop:
    - config
    - logs
    - plugins
    - client/plugins
  loop_control:
    loop_var: directory
  when: mattermost_update

- name: Création du lien symbolique vers la dernière version de Mattermost
  file:
    src: /var/www/{{ mattermost_owner }}/mattermost-{{ mattermost_version }}
    dest: /var/www/{{ mattermost_owner }}/dist
    state: link
  notify: restart mattermost

- name: Configuration de la base de données de Mattermost
  # This is needed in order to start the server in a test environment
  # All the other settings will be managed in the Mattermost admin panel.
  lineinfile:
    dest: /var/www/{{ mattermost_owner }}/dist/config/config.json
    regex: '(\s+"DataSource":)'
    line: '\1 "postgres://{{ mattermost_owner }}:{{ mattermost_postgresql_password }}@{{ postgresql_host }}:5432/{{ mattermost_owner }}?sslmode=disable\\u0026connect_timeout=10",'
    backrefs: true
    validate: /var/www/{{ mattermost_owner }}/dist/bin/mattermost config validate -c %s
  no_log: true
  notify: restart mattermost

- name: Configuration du service systemd
  template:
    src: systemd/mattermost.service.j2
    dest: /etc/systemd/system/mattermost.service
    owner: root
    group: root
    mode: "u=rw,go=r"
  notify:
    - reload systemd
    - restart mattermost

- name: Activation de Mattermost au démarrage
  service:
    name: mattermost
    state: started
    enabled: true

- name: Trigger Mattermost handlers
  meta: flush_handlers

- name: Vérification que le serveur Mattermost est prêt
  uri:
    url: http://localhost:8065/api/v4/system/ping
  register: _mattermost_server_ping
  retries: 10
  delay: 3
  until: _mattermost_server_ping is success

- name: Récupération de la liste des dossiers d'installation
  find:
    path: /var/www/{{ mattermost_owner }}
    file_type: directory
    use_regex: true
    recurse: false
    pattern: '^mattermost-[0-9]+\.[0-9]+\.[0-9]+$'
  register: _mattermost_installed_dirs

- name: Tri des dossiers d'installation par version
  set_fact:
    mattermost_oldest_install_dir: |-
      {{ _mattermost_installed_dirs.files
        | map(attribute='path')
        | community.general.version_sort
        | first }}

- name: Suppression de la plus ancienne installation ({{ mattermost_oldest_install_dir }})
  file:
    state: absent
    path: "{{ mattermost_oldest_install_dir }}"
  when: _mattermost_installed_dirs.files | length > 5
