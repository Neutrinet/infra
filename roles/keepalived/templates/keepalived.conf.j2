{{ ansible_managed | comment }}

global_defs {
  enable_script_security
  script_user root
}

{% for script in keepalived_vrrp_scripts %}
vrrp_script {{ script.name }} {
  script {{ script.cmd | string | to_json }}
  interval 2
  weight 2
}
{% endfor %}

vrrp_sync_group VG {
  group {
{% for instance in keepalived_instances %}
    VI_{{ instance.type }}_{{ loop.index }}
{% endfor %}
  }

{% if keepalived_vrrp_scripts | length > 0 %}
  track_script {
{% for script in keepalived_vrrp_scripts %}
    {{ script.name }}
{% endfor %}
  }
{% endif %}
}

{% for instance in keepalived_instances %}
vrrp_instance VI_{{ instance.type }}_{{ loop.index }} {
  interface {{ keepalived_interface }}

  state BACKUP
  priority 100
  advert_int 1

  unicast_src_ip {{ (instance.addresses | intersect(lookup('vars', 'ansible_all_' + instance.type + '_addresses')) | list | first) }}

  unicast_peer {
{% for ip in instance.addresses if ip not in lookup('vars', 'ansible_all_' + instance.type + '_addresses') %}
    {{ ip }}
{% endfor %}
  }
  virtual_router_id {{ keepalived_virtual_router_id | int }}
  virtual_ipaddress {
    {{ instance.vip }}
{% if 'additional_vip' in instance %}
{% for ip in instance.additional_vip %}
    {{ ip }}
{% endfor %}
{% endif %}
  }
}
{% endfor %}
