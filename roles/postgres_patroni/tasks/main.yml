---
- name: Installation de PostgreSQL
  ansible.builtin.import_role:
    name: postgres
  tags: ['postgresql']

- name: Désactivation du serveur PostgreSQL par défaut
  ansible.builtin.service:
    name: postgresql
    state: stopped
    enabled: false
  tags: ['postgresql']

- name: Installation de Etcd
  ansible.builtin.import_role:
    name: etcd
  tags: ['etcd']

- name: Installation de Patroni
  ansible.builtin.package:
    name: patroni
    state: present

- name: Configuration de Patroni
  ansible.builtin.template:
    src: config.yml.j2
    dest: /etc/patroni/config.yml
    owner: postgres
    group: postgres
    mode: "u=rw,g=r,o="
    validate: patroni --validate-config %s
  vars:
    patroni_current_member: "{{ etcd_members | selectattr('name', '==', ansible_hostname) | first }}"
  notify: reload patroni

- name: Activation de Patroni au démarrage
  ansible.builtin.service:
    name: patroni
    state: started
    enabled: true

- name: Vérification que le cluster Patroni est prêt
  ansible.builtin.uri:
    url: http://localhost:8008/health
  register: _postgresql_patroni_health
  retries: 10
  delay: 3
  until: _postgresql_patroni_health is success

- name: Création de l'utilisateur PostgreSQL telegraf
  community.postgresql.postgresql_user:
    name: telegraf
  become_user: postgres
  when: _postgresql_patroni_health.json.role == 'master'
  tags: ['telegraf_config']

- name: Ajout de l'utilisateur PostgreSQL telegraf au groupe pg_monitor
  community.postgresql.postgresql_membership:
    group: pg_monitor
    target_role: telegraf
    state: exact
  become_user: postgres
  when: _postgresql_patroni_health.json.role == 'master'
  tags: ['telegraf_config']

- name: Installation des plugins Telegraf
  ansible.builtin.template:
    src: telegraf/patroni.conf.j2
    dest: /etc/telegraf/telegraf.d/patroni.conf
    owner: telegraf
    group: telegraf
    mode: "u=rw,g=r,o="
    # We don't validate because PostgreSQL expects the user telegraf to connect to the database
    # but the validation is made as root, so it doesn't work.
    # validate: telegraf --config %s --test
  notify: restart telegraf
  tags: ['telegraf_config']

- name: Configuration des backups Borgmatic
  ansible.builtin.template:
    src: borgmatic/patroni.yml.j2
    dest: /etc/borgmatic.d/patroni.yml
    owner: root
    group: root
    mode: "u=rw,go="
    validate: /opt/borgmatic/bin/validate-borgmatic-config -c %s
  tags: ['borgmatic_config']
