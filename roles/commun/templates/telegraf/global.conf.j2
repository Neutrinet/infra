{{ ansible_managed | comment }}

[global_tags]
  dc = {{ datacenter_name | to_json }}

[agent]
  ## Override default hostname, if empty use os.Hostname()
  hostname = {{ ansible_fqdn }}


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Publish all metrics to /metrics for Prometheus to scrape
[[outputs.prometheus_client]]
  ## Address to listen on.
  listen = ":9273"

  ## Metric version controls the mapping from Telegraf metrics into
  ## Prometheus format.  When using the prometheus input, use the same value in
  ## both plugins to ensure metrics are round-tripped without modification.
  ##
  ##   example: metric_version = 1; deprecated in 1.13
  ##            metric_version = 2; recommended version
  metric_version = 2

  ## Use HTTP Basic Authentication.
  basic_username = {{ telegraf_username | to_json }}
  basic_password = {{ telegraf_password | to_json }}


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################


# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  report_active = false


# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]


# Read metrics about disk IO by device
[[inputs.diskio]]


# Get kernel statistics from /proc/stat
[[inputs.kernel]]


# Read metrics about memory usage
[[inputs.mem]]


# Get the number of processes and group them by status
[[inputs.processes]]


# Read metrics about swap memory usage
[[inputs.swap]]


# Read metrics about system load & uptime
[[inputs.system]]


# # Collect statistics about itself
[[inputs.internal]]
  ## If true, collect telegraf memory stats.
  # collect_memstats = true


# Get kernel statistics from /proc/vmstat
[[inputs.kernel_vmstat]]


# Read metrics about network interface usage
[[inputs.net]]


# Read TCP metrics such as established, time wait and sockets counts.
[[inputs.netstat]]


# Gather systemd units state
[[inputs.systemd_units]]
  ## Filter for a specific unit type, default is "service", other possible
  ## values are "socket", "target", "device", "mount", "automount", "swap",
  ## "timer", "path", "slice" and "scope ":
  unittype = "service"
