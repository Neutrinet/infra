---
- name: Installation de Caddy2
  import_role:
    name: caddy_server
  tags: ['caddy']

- name: Configuration du site (caddy, etc.)
  import_role:
    name: web_app
  vars:
    web_app_domain: "{{ backoffice_domain }}"
    web_app_caddy_template: caddy/backoffice.j2
  tags: ['web_app']

- name: Configuration de Caddy2 pour ffdnapi
  template:
    src: caddy/ffdnapi.j2
    dest: "{{ caddy_vhosts_dir }}/{{ backoffice_ffdnapi_domain | replace('.', '-') }}.conf"
    owner: root
    group: root
    mode: "u=rw,go=r"
    validate: caddy validate --adapter caddyfile --config %s
  notify: reload caddy

- name: Création de la base de données PostgreSQL
  community.postgresql.postgresql_db:
    name: "{{ web_app_owner }}"
    state: present
  become_user: postgres
  tags: ['postgres']

- name: Création de l'utilisateur PostgreSQL {{ web_app_owner }}
  community.postgresql.postgresql_user:
    db: "{{ web_app_owner }}"
    name: "{{ web_app_owner }}"
    password: "{{ backoffice_postgresql_password }}"
    priv: ALL
  become_user: postgres
  no_log: true
  tags: ['postgres']

- name: Installation de pip2 et ses dépendances
  package:
    name:
      - python-pip
      - virtualenv
      - libpq-dev
    state: present

- name: Récupération du dépôt git de backoffice # noqa git-latest
  git:
    repo: https://gitlab.domainepublic.net/Neutrinet/backoffice.git
    dest: "{{ web_app_dist_dir }}"
    single_branch: true
  become_user: "{{ web_app_owner }}"
  notify: restart backoffice

- name: Configuration de backoffice
  template:
    src: backoffice/settings_local.py.j2
    dest: "{{ web_app_dist_dir }}/backoffice/settings_local.py"
    owner: "{{ web_app_owner }}"
    group: "{{ web_app_owner }}"
    mode: "u=rw,g=r,o="
  notify: restart backoffice

- name: Création du virtualenv python
  pip:
    requirements: "{{ web_app_dist_dir }}/requirements.txt"
    state: present
    virtualenv: "{{ web_app_dist_dir }}/env"
    virtualenv_python: python2
  become_user: "{{ web_app_owner }}"
  notify: restart backoffice

- name: Configuration du service systemd
  template:
    src: systemd/backoffice.service.j2
    dest: /etc/systemd/system/backoffice.service
    owner: root
    group: root
    mode: "u=rw,go=r"
  notify:
    - reload systemd
    - restart backoffice

- name: Activation de Backoffice au démarrage
  service:
    name: backoffice
    state: started
    enabled: true
