function bgp_import(int ip_version; int AS; string import_type; string locality)
{
    if ! (ip_version = 6 || ip_version = 4) then {
        print "bgp_import: parametre ip_version invalide";
        return false;
    }

    if ! (import_type = "transit" || import_type="peering" || import_type="route-server" || import_type="member" || import_type="core") then {
        print "bgp_import: parametre import_type invalide";
        return false;
    }

    if ! (locality = "louisedc" || locality = "bnix" || locality = "belgiumix" || locality = "local") then {
        print "bgp_import: parametre locality invalide";
        return false;
    }

    if ddos_telia_protection then {
        if import_type="peering" || import_type="route-server" then return false;
        if import_type="transit" && AS =! 6696 then return false;
    }

    # Reject Big block Neutrinet
    if ip_version = 6 && (net ~ my_prefix_v6) then return false;
    if ip_version = 4 && (net ~ my_prefix_v4) then return false;

    # Basic Filter
    if reject_bogon_asns("import", locality)               then return false;
    if reject_long_aspaths("import", locality)             then return false;

    if ip_version = 6 then {
        if reject_v6_bogon_prefixes("import", locality)    then return false;
        if match_rtbh_v6("import", locality)               then return true;
        if reject_v6_small_prefixes("import", locality)    then return false;
        if reject_v6_default_route("import", locality)     then return false;
        if reject_v6_invalid_rpki("import", locality)      then return false;
    }

    if ip_version = 4 then {
        if reject_v4_bogon_prefixes("import", locality)    then return false;
        if match_rtbh_v4("import", locality)               then return true;
        if reject_v4_small_prefixes("import", locality)    then return false;
        if reject_v4_default_route("import", locality)     then return false;
        if reject_v4_invalid_rpki("import", locality)      then return false;
    }

    if import_type = "transit"         then bgp_local_pref = 100;
    if import_type = "peering"         then bgp_local_pref = 150;
    if import_type = "route-server"    then bgp_local_pref = 151;
    if import_type = "member"          then bgp_local_pref = 180;
    if import_type = "core"            then bgp_local_pref = 190;

    if import_type = "transit"         then bgp_large_community.add((my_asn, AS, 100));
    if import_type = "peering"         then bgp_large_community.add((my_asn, AS, 150));
    if import_type = "route-server"    then bgp_large_community.add((my_asn, AS, 151));
    if import_type = "member"          then bgp_large_community.add((my_asn, AS, 180));
    if import_type = "core"            then bgp_large_community.add((my_asn, AS, 190));

    return true;
}
