function bgp_import(int ip_version; int AS; string import_type; string locality)
int community;
{
    if ! (ip_version = 6 || ip_version = 4) then {
        print "bgp_import: parametre ip_version invalide";
        return false;
    }

    if ! (import_type = "transit" || import_type="peering" || import_type="route-server" || import_type="member" || import_type="core" || import_type="default_gateway") then {
        print "bgp_import: parametre import_type invalide";
        return false;
    }

    if ! (locality = "private" || locality = "bnix" || locality = "belgiumix" || locality = "internal") then {
        print "bgp_import: parametre locality invalide";
        return false;
    }

    if source = RTS_DEVICE then return false;

    if (import_type = "default_gateway") then {
        if ip_version = 6 && (net = ::/0) then {
            return true;
        }
        if ip_version = 4 && (net = 0.0.0.0/0) then {
            return true;
        }

        return false;
    }

    community = 0;

    if locality = "internal"        then community = community + 1000;
    if locality = "private"         then community = community + 2000;
    if locality = "bnix"            then community = community + 3000;
    if locality = "belgiumix"       then community = community + 3100;

    if import_type = "core"         then community = community + 10;
    if import_type = "member"       then community = community + 10;
    if import_type = "transit"      then community = community + 20;
    if import_type = "route-server" then community = community + 30;
    if import_type = "peering"      then community = community + 31;

    if bgp_local_pref = 100 then {
        if import_type = "core"         then bgp_local_pref = 190;
        if import_type = "member"       then bgp_local_pref = 180;
        if import_type = "route-server" then bgp_local_pref = 151;
        if import_type = "peering"      then bgp_local_pref = 150;
        if import_type = "transit"      then bgp_local_pref = 101;
    }

    bgp_large_community.add((my_asn, AS, community));


    if ddos_telia_protection then {
        if import_type="peering" || import_type="route-server" then return false;
        if import_type="transit" && AS =! 6696 then return false;
    }

    # Reject Big block Neutrinet
    if ip_version = 6 && (net ~ my_prefix_v6) then return false;
    if ip_version = 4 && (net ~ my_prefix_v4) then return false;

    if import_type = "core" then {
        if ip_version = 4 && (net ~ filter_my_prefix_v4) && (net.len > 24) then print "help2 ", net;

        if ip_version = 6 && (net ~ filter_my_prefix_v6) && (net.len > 36) then return true;
        if ip_version = 4 && (net ~ filter_my_prefix_v4) && (net.len > 24) then return true;
    }

    # Basic Filter
    if reject_bogon_asns("import", locality)               then return false;
    if reject_long_aspaths("import", locality)             then return false;

    if ip_version = 6 then {
        if reject_v6_bogon_prefixes("import", locality)    then return false;
        if match_rtbh_v6("import", locality, AS)           then return true;
        if reject_v6_small_prefixes("import", locality)    then return false;
        if reject_v6_default_route("import", locality)     then return false;
        if reject_v6_invalid_rpki("import", locality)      then return false;
    }

    if ip_version = 4 then {
        if reject_v4_bogon_prefixes("import", locality)    then return false;
        if match_rtbh_v4("import", locality, AS)           then return true;
        if reject_v4_small_prefixes("import", locality)    then return false;
        if reject_v4_default_route("import", locality)     then return false;
        if reject_v4_invalid_rpki("import", locality)      then return false;
    }

    return true;
}
